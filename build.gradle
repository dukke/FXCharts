import java.text.SimpleDateFormat

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'biz.aQute.bnd:biz.aQute.bnd.gradle:4.2.0'
    }
}

//
plugins {
    id 'com.gradle.build-scan' version '2.3'
    id 'idea'
    id 'java'
    id 'maven-publish'
    id 'net.nemerosa.versioning' version '2.8.2'
    id 'com.jfrog.bintray' version '1.8.4'
    id 'org.openjfx.javafxplugin' version '0.0.7'
}

apply plugin: 'biz.aQute.bnd.builder'

sourceCompatibility = '12'

wrapper {
    gradleVersion = '5.4.1'
}

buildScan {
    termsOfServiceUrl   = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}

description = 'Charts'

Date buildTimeAndDate = new Date()
ext {
    buildDate = new SimpleDateFormat('yyyy-MM-dd').format(buildTimeAndDate)
    buildTime = new SimpleDateFormat('HH:mm:ss.SSSZ').format(buildTimeAndDate)
}

javafx {
    modules = [ 'javafx.controls', 'javafx.web' ]
}

jar {
    manifest {
        attributes(
                'Built-By': System.properties['user.name'],
                'Created-By': System.properties['java.version'] + " (" + System.properties['java.vendor'] + " " + System.properties['java.vm.version'] + ")",
                'Build-Date': project.buildDate,
                'Build-Time': project.buildTime,
                'Build-Revision': versioning.info.commit,
                'Specification-Title': project.name,
                'Specification-Version': project.version,
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Bundle-Name': project.name,
                'Bundle-License': 'https://www.apache.org/licenses/LICENSE-2.0;description=Apache License Version 2.0;link=https://www.eclipse.org/legal/eplfaq.php',
                'Bundle-Description': description,
                'Bundle-SymbolicName': 'com.pixelduke.chart',
                'Export-Package': 'com.pixelduke.chart',
                'Automatic-Module-Name': 'com.pixelduke.chart'
        )
    }
}

repositories {
    jcenter()
    mavenCentral()
}

// start the demo from gradle
task Demo(type: JavaExec) {
    main = "com.pixelduke.chart.DateAxis"
    classpath = sourceSets.main.runtimeClasspath
}

// create one jar for the javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// create one jar for the source files
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

def pomConfig = {
    name 'chart'
}


